@page "/"
<PageTitle>Список задач</PageTitle>
<body>
<h1>Список дел</h1>
<div class="filter-menu">
    <select @bind="selectedFilter" class="task-filter">
        <option value="all">Все задачи</option>
        <option value="notCompleted">Незавершенные</option>
        <option value="completed">Завершенные</option>
    </select>
</div>
<div>
	<div class="tasks">
            @if (filteredTasks.Any())
            {
                @foreach (var task in filteredTasks)
                {
                    <div class="task">
                        <input type="checkbox" @bind="task.IsCompleted" @oninput="StateHasChanged"/>
                        <span style="text-decoration: @(task.IsCompleted ? "line-through" : "none")">
                            @task.Text
                        </span>
                        <button @onclick="() => RemoveTask(task)"></button>
                    </div>
                }
            }
            else
            {
                <p>Нет задач</p>
            }
        </div>
	<div class="inputText">
		<input type="text" @bind="newTask" placeholder="Введите задачу..."/>
		<button @onclick="AddTask">Добавить</button>
	</div>
</div>
</body>

@code
{
    private List<TaskItem> tasks = new();
    private string newTask = "";
    private string selectedFilter = "all";

    private List<TaskItem> filteredTasks
    {
        get
        {
            return selectedFilter switch
            {
                "active" => tasks.Where(t => !t.IsCompleted).ToList(),
                "completed" => tasks.Where(t => t.IsCompleted).ToList(),
                _ => tasks
            };
        }
    }

    private void AddTask()
    {
        if (!string.IsNullOrWhiteSpace(newTask))
        {
            tasks.Add(new TaskItem { Text = newTask, IsCompleted = false });
            newTask = "";
        }
    }

    private void RemoveTask(TaskItem task)
    {
        tasks.Remove(task);
    }

    public class TaskItem
    {
        public string Text { get; set; } = "";
        public bool IsCompleted { get; set; }
    }
}